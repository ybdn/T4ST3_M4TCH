# Configuration Docker Compose pour le d√©veloppement local
# Usage: docker-compose -f docker-compose.local.yml up

services:
  db:
    image: postgres:15-alpine
    restart: always
    volumes:
      - postgres_data_local:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: tastematch
      POSTGRES_USER: tastematch
      POSTGRES_PASSWORD: tastematch
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tastematch"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: .docker/backend/Dockerfile
    restart: always
    command: bash -lc "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env.local
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  frontend:
    build:
      context: .
      dockerfile: .docker/frontend/Dockerfile
    restart: always
    volumes:
      - ./frontend:/app
      - node_modules_volume_local:/app/node_modules
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8000
    depends_on:
      - backend

volumes:
  postgres_data_local:
  node_modules_volume_local: