# Generated by Django 5.2.1 on 2025-08-07 14:50

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_listitem_list_category_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='APICache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cache_key', models.CharField(max_length=255, unique=True, verbose_name='Clé de cache')),
                ('data', models.JSONField(verbose_name='Données cachées')),
                ('expires_at', models.DateTimeField(verbose_name="Date d'expiration")),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
            ],
            options={
                'verbose_name': 'Cache API',
                'verbose_name_plural': 'Cache API',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['cache_key'], name='core_apicac_cache_k_c60a13_idx'), models.Index(fields=['expires_at'], name='core_apicac_expires_f7238f_idx')],
            },
        ),
        migrations.CreateModel(
            name='ExternalReference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(max_length=100, verbose_name='ID externe')),
                ('external_source', models.CharField(choices=[('tmdb', 'The Movie Database'), ('spotify', 'Spotify'), ('openlibrary', 'Open Library'), ('google_books', 'Google Books')], max_length=20, verbose_name='Source API')),
                ('poster_url', models.URLField(blank=True, null=True, verbose_name='URL du poster/pochette')),
                ('backdrop_url', models.URLField(blank=True, null=True, verbose_name="URL de l'image de fond")),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Métadonnées enrichies')),
                ('rating', models.FloatField(blank=True, null=True, verbose_name='Note (TMDB, etc.)')),
                ('release_date', models.DateField(blank=True, null=True, verbose_name='Date de sortie/publication')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Dernière mise à jour')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('list_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='external_ref', to='core.listitem', verbose_name='Élément de liste')),
            ],
            options={
                'verbose_name': 'Référence externe',
                'verbose_name_plural': 'Références externes',
                'ordering': ['-created_at'],
                'constraints': [models.UniqueConstraint(fields=('external_id', 'external_source'), name='unique_external_reference')],
            },
        ),
    ]
